import { httpRouter } from "convex/server";
import { httpAction } from "./_generated/server";
import { api } from "./_generated/api";
import { useAction } from "convex/react";
import { addPageToDatabaseType } from "../types/Types";
const { Client } = require('@notionhq/client');



export const doSomething = httpAction(async (ctx, request) => {

  try{
    const {integrationKey,tabUrl} = await request.json();
    let notionPageId = ""
    if(tabUrl.split("&p=").length>1){
      notionPageId = tabUrl.split("&p=")[1].split("&pm=")[0]
      console.log({notionPageId})
    }
    else{
      notionPageId = tabUrl.split("-")[tabUrl.split("-").length-1];
    }

    const notion = new Client({ auth:integrationKey });
  
  
    async function getPageData(){ // retrieve title of the page from url
      var retrievedPage = await notion.pages.retrieve({ page_id: notionPageId });
      // console.log(retrievedPage.properties.Name.title[0].plain_text); 
      return retrievedPage.properties.Name.title[0].plain_text
  }
  
  const title = await getPageData()
  console.log({title})


    const youtubeData  = await ctx.runAction(api.youtubeAction.getFinalSummary,{userPrompt:title})
    const gptSummary = await ctx.runAction(api.openaiAction.gptAction,{userPrompt:title})

    console.log({
      notionUrl:tabUrl,
      content: gptSummary,
      topic: title,
      trancriptSummary: youtubeData?.summary as string,
      videoId: youtubeData?.videoId,
      notionKey: integrationKey
    })
  
  
      await updatePage({
              notionUrl:tabUrl,
              content: gptSummary,
              topic: title,
              trancriptSummary: youtubeData?.summary as string,
              videoId: youtubeData?.videoId,
              notionKey: integrationKey
            })
  
  
  
    async function updatePage ( args:addPageToDatabaseType) {
  
      const notion = new Client({ auth:args.notionKey });
      const pageId = notionPageId;
      const response = await notion.blocks.children.append({
          block_id: pageId,
          "children": [
              {
                  "object": "block",
                  "heading_2": {
                      "rich_text": [
                          {
                              "text": {
                                  "content": `Here's some important information about ${args.topic}`
                              }
                          }
                      ]
                  }
              },
              
              
              {
                "object": "block",
                "paragraph": {
                    "rich_text": [
                        {
                            "text": {
                                "content": args.content,
                            },
                            
                        }
                    ],
                    "color": "default"
                }
            },
  
            // summary generated by youtube and chatGpt
  
            {
              "object": "block",
              "heading_2": {
                  "rich_text": [
                      {
                          "text": {
                              "content": `https://www.youtube.com/watch?v=${args.videoId}` 
                          }
                      }
                  ]
              }
          },
  
          {
              "object": "block",
              "heading_2": {
                  "rich_text": [
                      {
                          "text": {
                              "content": "here's a summary of the above video ."
                          }
                      }
                  ]
              }
          },
  
              {
                  "object": "block",
                  "paragraph": {
                      "rich_text": [
                          {
                              "text": {
                                  "content": args.trancriptSummary,
                                  "link": {
                                      "url": `https://www.youtube.com/watch?v=${args.videoId}` 
                                  }
                              },
                              "href": `https://www.youtube.com/watch?v=${args.videoId}` 
                          }
                      ],
                      "color": "default"
                  }
              },
    
          ]
        });
      console.log(response);
      
    }
  }catch{
    console.log("error")
    return new Response("unsuccessful")
  }
  
  return new Response("successful")
  
  
});